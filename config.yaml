SETTINGS:
    # 并发线程数
    THREADS: 1

    # 任何操作的重试次数
    ATTEMPTS: 5

    # 账户范围
    # 默认值: [0, 0] - 所有账户
    # [3, 5] - 仅使用 3, 4, 5 号账户
    # [7, 7] - 仅使用 7 号账户
    ACCOUNTS_RANGE: [0, 0]

    # 仅在 ACCOUNTS_RANGE 为 [0, 0] 时生效
    # 要使用的具体账户
    # 默认值: [] - 所有账户
    # 示例: [1, 4, 6] - 仅使用 1, 4, 6 号账户
    EXACT_ACCOUNTS_TO_USE: []

    # 每次尝试之间的暂停时间
    PAUSE_BETWEEN_ATTEMPTS: [5, 15]

    # 交换操作之间的暂停时间
    PAUSE_BETWEEN_SWAPS: [10, 40]

    # 账户之间的随机暂停时间（秒）
    RANDOM_PAUSE_BETWEEN_ACCOUNTS: [3, 15]

    # 操作之间的随机暂停时间（秒）
    RANDOM_PAUSE_BETWEEN_ACTIONS: [3, 10]

    # 每个账户启动前的随机暂停时间
    # 以确保所有账户在不同时间启动
    RANDOM_INITIALIZATION_PAUSE: [5, 20]

    # 浏览器操作的暂停时间倍数
    BROWSER_PAUSE_MULTIPLIER: 1.5

# --------------------------- #
FLOW:
    # 需要执行的任务

    # 水龙头（FAUCETS）
    # "faucet" - 从水龙头领取代币
    # "farm_faucet" - 从水龙头领取农场账户的代币 (data/keys_for_faucet.txt)
    # "disperse_farm_accounts" - 将农场账户的代币分发到主账户 | keys_for_faucet.txt -> private_keys.txt
    # "disperse_from_one_wallet" - 从一个钱包分发代币到所有其他钱包 | keys_for_faucet.txt（第一个钱包） -> private_keys.txt

    # 交换（SWAPS）
    # "collect_all_to_monad" - 将所有代币兑换为本地代币（MON）
    # "swaps" - testnet.monad.xyz 页面上的代币交换
    # "bean" - 在 Bean DEX 上交换代币
    # "ambient" - 在 Ambient DEX 上交换代币

    # 质押（STAKES）
    # "apriori" - 质押 MON 代币
    # "magma" - 在 Magma 质押 MON 代币
    # "shmonad" - 在 shmonad.xyz 购买并质押 shmon | 具体设置见下方
    # "kintsu" - 在 kintsu.xyz 质押 MON 代币

    # 铸造（MINT）
    # "magiceden" - 在 magiceden.io 铸造 NFT
    # "accountable" - 铸造 accountable NFT
    # "owlto" - 在 Owlto 部署合约
    # "lilchogstars" - 在 testnet.lilchogstars.com/ 铸造 NFT
    # "demask" - 在 app.demask.finance/launchpad/ 铸造 NFT
    # "monadking" - 在 nerzo.xyz/monadking 铸造 NFT
    # "monadking_unlocked" - 在 www.nerzo.xyz/unlocked 铸造 NFT

    # 补充燃料（REFUEL）
    # "gaszip" - 从 arbitrum、optimism、base 为 monad 补充燃料
    # "orbiter" - 通过 Orbiter 桥接 ETH 从 Sepolia 到 Monad
    # "memebridge" - 通过 memebridge 从 arbitrum、optimism、base 为 monad 补充燃料

    # 其他（OTHER）
    # "logs" - 显示日志: MON 余额 | 交易数量 | 平均余额 | 平均交易数量
    # "nad_domains" - 在 nad.domains 注册随机域名
    # "aircraft" - 在 aircraft.fun 铸造 NFT
    # 不可用，等待更新 - "bima" - 贷款

    # 任务示例: tasks: ["gaszip", "swaps"]
    # 随机任务示例:
    # TASKS: ["swaps", ["bean", "logs"], "collect_all_to_monad"]
    # 在此情况下，任务将按以下顺序执行:
    # 1. swaps
    # 2. bean 或 logs（随机选择）
    # 3. collect_all_to_monad
    TASKS: ["aircraft","accountable",["apriori","swaps"]]

    # 交换次数（bean、ambient、monad 等）
    NUMBER_OF_SWAPS: [1, 3]

    # 交换的余额百分比
    PERCENT_OF_BALANCE_TO_SWAP: [10, 15]

FAUCET:
    MONAD_XYZ: true

    CAPSOLVER_API_KEY: "CAP-"
    PROXY_FOR_CAPTCHA: ""

DISPERSE:
    # 如果主账户余额低于该值
    # 机器人将从农场账户分发代币到主账户
    MIN_BALANCE_FOR_DISPERSE: [0.2, 0.5]


APRIORI:
    AMOUNT_TO_STAKE: [0.0001, 0.0003]

MAGMA:
    AMOUNT_TO_STAKE: [0.0001, 0.0003]

KINTSU:
    # 最低金额 0.01 $MON
    AMOUNT_TO_STAKE: [0.01, 0.02]

BIMA:
    LEND: true
    PERCENT_OF_BALANCE_TO_LEND: [20, 30]

GASZIP:
    # 用于补充燃料的网络
    NETWORKS_TO_REFUEL_FROM: ["Arbitrum", "Base", "Optimism"]
    AMOUNT_TO_REFUEL: [0.0001, 0.00015]
    MINIMUM_BALANCE_TO_REFUEL: 0.5
    WAIT_FOR_FUNDS_TO_ARRIVE: true
    MAX_WAIT_TIME: 999999

SHMONAD:
    BUY_AND_STAKE_SHMON: true
    UNSTAKE_AND_SELL_SHMON: true

    # 在 shmonad.xyz 交换的余额百分比
    PERCENT_OF_BALANCE_TO_SWAP: [2, 3]

ACCOUNTABLE:
    NFT_PER_ACCOUNT_LIMIT: 3

ORBITER:
    AMOUNT_TO_BRIDGE: [0.1, 0.2]
    BRIDGE_ALL: false
    WAIT_FOR_FUNDS_TO_ARRIVE: true
    MAX_WAIT_TIME: 999999999

LILCHOGSTARS:
    MAX_AMOUNT_FOR_EACH_ACCOUNT: [1, 3]

DEMASK:
    MAX_AMOUNT_FOR_EACH_ACCOUNT: [1, 3]

# monadking 或 monadking_unlocked
MONADKING:
    MAX_AMOUNT_FOR_EACH_ACCOUNT: [1, 3]


MAGICEDEN:
    NFT_CONTRACTS: [
      "0x4269cde9751237634d972026583bd39dff10b6f8", # 0.01 $MON
      "0xb3b63ea6ad288f74c1268a50640919fadae84454", # 0.01 $MON
      "0xbf5340ac35c0653e4f30a52bca8de137bb717b56", # 0.001 $MON
      "0x3941ae709a872cd14af1871c8442aa4cf0967e84", # 0.01 $MON
      "0x0fa3da91d4469dfd8c7a0cb13c47d90c8e88d5bd", # 免费
      "0x95d04e083255fe1b71d690791301831b6896d183", # 免费
    ]